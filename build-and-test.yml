trigger: none

pr:
  - master
  - develop
  - release/*  

pool:
  vmImage: 'ubuntu-latest'
  
strategy:
  matrix:
    node_8_x:
      node_version: 8.x
    node_10_x:
      node_version: 10.x
      
steps:
- task: NodeTool@0
  inputs:
    versionSpec: $(node_version)
  displayName: 'Install Node.js'

- script: |
    content='{ 
      "name": "pipeline-node", 
      "version": "1.0.0", 
      "description": "Temporary package to allow all tests to run using the local code as dependencies", 
      "main": "index.js", 
      "scripts": { 
        "test": "jest --ci --reporters=jest-junit --reporters=default --coverage --coverageReporters=cobertura" 
        }, 
      "repository": { 
        "type": "git", "url": "https://github.com/51Degrees/pipeline-node" 
        }, 
      "author": "51Degrees", 
      "license": "MPL-2.0", 
      "dependencies": { 
        "jest": "^24.9.0",
        "jest-junit": "^9.0.0"
        },
      "jest-junit": {
          "outputName": "'"$NODE_VERSION"'.xml"    
        } 
      }'
    echo $content
    echo $content > package.json
  displayName: 'Create package.json for tests'

- script: |
    npm install jest
    npm install jest-junit
    npm test
  displayName: 'Build and Test'

- task: PublishTestResults@2
  condition: succeededOrFailed()
  inputs:
    testRunner: JUnit
    testResultsFiles: '**/$(node_version).xml'

- task: PublishCodeCoverageResults@1
  inputs: 
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/*coverage.xml'
    reportDirectory: '$(System.DefaultWorkingDirectory)/**/coverage'


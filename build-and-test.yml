trigger: none

pr:
  - master
  - develop
  - release/*  

pool:
  vmImage: 'ubuntu-latest'
  
variables: 
  - group: PackageFeedAccessToken
  - group: InternalKeys
    
strategy:
  matrix:
    node_6_x:
      node_version: 6.x
    node_8_x:
      node_version: 8.x
    node_10_x:
      node_version: 10.x
    node_12_x:
      node_version: 12.x
      
steps:
- checkout: self
  lfs: true
  submodules: recursive

- task: NodeTool@0
  inputs:
    versionSpec: $(node_version)
  displayName: 'Install Node.js'
  
# The secure file to download will be stored in the 
# Pipelines/Library/SecureFiles section in Azure DevOps.
- task: DownloadSecureFile@1
  displayName: 'Download .npmrc'
  name: npmrc
  inputs:
    secureFile: '.npmrc'

- task: CopyFiles@2
  displayName: 'Copy .npmrc to working directory'
  inputs:
    sourceFolder: '$(Agent.TempDirectory)'
    targetFolder: '$(System.DefaultWorkingDirectory)/fiftyone.devicedetection'
    contents: '.npmrc'

# 1. Set resource key environment variable from resource key value 
# in 'InternalKeys' group 
# 2. Move to correct dir.
# 3. Install dependencies.
# 4. Run tests.
- script: |
    echo "Resource key for cloud testing = $(ResourceKey)"
    export RESOURCE_KEY="$(ResourceKey)"
    cd fiftyone.devicedetection
    npm install
    npm test
  displayName: 'Build and Test'

- script: |
    find "$(System.DefaultWorkingDirectory)" -name "*core*"
  displayName: 'Get core dump'
  condition: succeededOrFailed()

- script: |
    cd fiftyone.devicedetection
    eslint='{
        "env": {
            "browser": true,
            "commonjs": true,
            "es6": true,
            "jest": true
        },
        "extends": [
            "standard"
        ],
        "globals": {
            "Atomics": "readonly",
            "SharedArrayBuffer": "readonly",
            "test": true,
            "jest": true,
            "expect": true
        },
        "parserOptions": {
            "ecmaVersion": 2018
        },
        "rules": {
            "node/no-deprecated-api": "off",
            "no-throw-literal": "off",
            "no-path-concat": "off",
            "no-prototype-builtins": "off",
            "no-eval": "off",
            "semi": [
                2,
                "always"
            ]
        }
      }'
    echo $eslint
    echo $eslint > .eslintrc
    npm install -g eslint
    eslint **/*.js
  displayName: "Set up and run eslint"
  condition: and(ne(variables['node_version'], '6.x'), ne(variables['node_version'], '8.x'))

- task: PublishTestResults@2
  condition: succeededOrFailed()
  inputs:
    testRunner: JUnit
    testResultsFiles: '**/test_results.xml'
    testRunTitle: 'Node $(node_version)'

- task: PublishCodeCoverageResults@1
  condition: succeededOrFailed()
  inputs: 
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/*coverage.xml'
    reportDirectory: '$(System.DefaultWorkingDirectory)/**/coverage'

